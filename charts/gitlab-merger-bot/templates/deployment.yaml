apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gitlab-merger-bot.fullname" . }}
  namespace: {{ include "gitlab-merger-bot.namespace" . }}
{{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
{{- end }}
  labels:
    {{- include "helm-chart.labels" . | nindent 4 }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "gitlab-merger-bot.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: Recreate # stop app before update
  template:
    metadata:
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app: {{ include "gitlab-merger-bot.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: GITLAB_AUTH_TOKEN
          value: "{{ .Values.settings.authToken }}"
        - name: GITLAB_URL
          value: "{{ .Values.settings.gitlabUrl }}"
        - name: ALLOWED_PROJECT_IDS
          value: "{{ .Values.settings.allowedProjectIds }}"
        - name: CI_CHECK_INTERVAL
          value: "{{ .Values.settings.ciCheckInterval }}"
        - name: MR_CHECK_INTERVAL
          value: "{{ .Values.settings.mrCheckInterval }}"
        - name: REMOVE_BRANCH_AFTER_MERGE
          value: "{{ .Values.settings.removeBranchAfterMerge }}"
        - name: SQUASH_MERGE_REQUEST
          value: "{{ .Values.settings.squashMergeRequest }}"
        - name: AUTORUN_MANUAL_BLOCKING_JOBS
          value: "{{ .Values.settings.autorunManualBlockingJobs }}"
        - name: SENTRY_DSN
          value: "{{ .Values.settings.sentryDsn }}"
        - name: SKIP_SQUASHING_LABEL
          value: "{{ .Values.settings.skipSquashingLabel }}"
        - name: HIGH_PRIORITY_LABEL
          value: "{{ .Values.settings.highPriorityLabel }}"
        - name: HTTP_SERVER_ENABLE
          value: "{{ .Values.settings.httpServerEnable }}"
        - name: HTTP_SERVER_PORT
          value: "{{ .Values.settings.httpServerPort }}"
        - name: WEB_HOOK_TOKEN
          value: "{{ .Values.settings.webHookToken }}"
        - name: ENABLE_PERMISSION_VALIDATION
          value: "{{ .Values.settings.enablePermissionValidation }}"
        {{- if .Values.settings.httpProxy }}
        - name: HTTP_PROXY
          valueFrom:
            secretKeyRef:
              key: httpProxy
              name: {{ .Values.settings.httpProxySecretName }}
        {{- end }}
{{- range $key, $value := .Values.env }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
